TailWind Css
First Step :-  npm install postcss-cli tailwindcss autoprefixer --save-dev
Second Step :- npx tailwind init

3rd:- Create postcss.config.js

const plugins = [require("tailwindcss"), require("autoprefixer")];
module.exports = {
    plugins : plugins
}

4th:=
Package.json
"scripts": {
    "start": "npm run tailwindcss && react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "tailwindcss" : "postcss tailwind.css -o public/app.css"
  },

https://tailwindcss.com/
https://www.creative-tim.com/learning-lab/tailwind-starter-kit/documentation/react/modals/regular
https://www.tailwindtoolbox.com/components/modal
https://reactjsexample.com/tag/sidebar/

https://www.npmjs.com/package/react-google-charts

http://react-datatable.in/loader.html

https://mertjf.github.io/tailblocks/

Babel Javascript
html css Support
Javascript Es6 code snippets
Prettier code Formater
vscode

Ajax Request :-
1) GET (Read) = Content Recieve Krna From User
2) POST (Create) = Value Create Krna
3) PUT (Update) = Change Krna Update Krna 
4) DELETE

/**/
First Install Node
React Insatll Command
1) npm install -g create-react-app
2) create-react-app reactapptuts (Any Name Of folder)
3) cd in folder(name)
4) npm start

https://joeschmoe.io/

https://react-bootstrap.github.io/getting-started/introduction

/* React Router Dom */

React Router
• Collection of navigational components
– Enables navigation among views
– Router components, route matching components and
navigation components
• Uses browser-based bookmarkable URLs as an instruction
to navigate to a client-generated view in your web app
– Can also pass along optional parameters

1) npm insatll react-router-dom

/***** React Install *****/

import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import Avatar from './Avatar';
import * as serviceWorker from './serviceWorker';

ReactDOM.render(<Avatar />, document.getElementById('root'));

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();

/* Avatar */
import React from "react";
import ReactDOM from "react-dom";
import Avatarlist from "./Avatarlist";
import 'bootstrap/dist/css/bootstrap.min.css';

class Avatar extends React.Component {
    render()
    {
        const avatarlistarray = [
            {
                id : 1,
                name : "Lucky",
                work : "Web Designer"
            },
    
            {
                id : 2,
                name : "Lucky1",
                work : "Web Designer"
            },
    
            {
                id : 3,
                name : "Lucky2",
                work : "Web Designer"
            },
    
            {
                id : 4,
                name : "Lucky3",
                work : "Web Designer"
            },
    
            {
                id : 5,
                name : "Lucky3 adas",
                work : "Web Designer"
            }
        ]
    
        const carda = avatarlistarray.map( (avatarcard,i) => {
            return  <Avatarlist id={avatarlistarray[i].id} 
                                name={avatarlistarray[i].name} 
                                work={avatarlistarray[i].work} />
        })

        return(
            <div className="container">
                <div className="row">
                    {carda}
                </div>
            </div>
        )
    }
}

export default Avatar;

/* AvatarList */
import React from "react";
import ReactDOM from "react-dom";
import 'bootstrap/dist/css/bootstrap.min.css';

const Avatarlist = ({name,work}) => {
    return(
        <div className="col-md-3">
            <img src={`https://joeschmoe.io/api/v1/${name}`} alt="Avatar" width="200px" />
            <h1> Hello {name} </h1>
            <p>{work}</p>
        </div>
    )
}
export default Avatarlist;


/* Menu Js */
import React from "react";
import {Link} from "react-router-dom";
import 'bootstrap/dist/css/bootstrap.min.css';

const Menu = () => {
    return (
        <div>
            <nav class="navbar navbar-expand-sm bg-dark navbar-dark">
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item">
                        <Link class="nav-link" to="/">Home</Link>
                    </li>
                    <li class="nav-item">
                        <Link class="nav-link" to="About">About</Link>
                    </li>
                    <li class="nav-item">
                        <Link class="nav-link" to="Contact">Contact</Link>
                    </li>
                </ul>
            </nav>    
        </div>
    )
}


export default Menu;

/* App Js */
import React from 'react';
import logo from './logo.svg';
import './App.css';
import Menu from "./Menu";
import About from "./About";
import Contact from "./Contact";
import {BrowserRouter,Route,Switch} from "react-router-dom";

function App() {
  return (
    <BrowserRouter>
      <div className="App">
        <Menu />
        <Switch>
          <Route path="/" exact component={Home} />
          <Route path="/about" component={About} />
          <Route path="/contact" component={Contact} />
        </Switch>
      </div>
    </BrowserRouter>
  );
}

const Home = () => {
  return (
      <div>
         <h1>Home</h1>    
      </div>
  )
}

export default App;

/* Form Field */
import React from "react";
import ReactDOM from "react-dom";

class Form extends React.Component
{
    constructor(props){
        super();
        this.state = {
            fullname : "Enter Name",
            email : "Enter Email",
            number : "Enter Number",
            message : "Enter Messages"
        }
    }

    // If u Don't Want To Repeat This Put the property Name for all field NAME wILL be same all field (Let's go For easy)
    // handlename = (event) => {
    //     this.setState({
    //         fullname : event.target.value
    //     })
    // }

    // handleemail = (event) => {
    //     this.setState({
    //         email : event.target.value
    //     })
    // }

    // handlenumber = (event) => {
    //     this.setState({
    //         number : event.target.value
    //     })
    // }

    // handlemessage = (event) => {
    //     this.setState({
    //         message : event.target.value
    //     })
    // }

    handlechange = (event) => {
        this.setState({
            [event.target.name] : [event.target.value]
        })
    }

    handlesubmit = (event) => {
        // alert(`My Name is : ${this.state.fullname}. 
        //        My Email ID is : ${this.state.email}. 
        //        My Mobile No is : ${this.state.number}.
        //        My Message ID is : ${this.state.message}. `);
        
        alert(JSON.stringify(this.state));
        event.preventDefault();
    }

    render()
    {
        return(
            <div className="col-md-6 offset-md-3">
                <div className="p-5 text-left new_form">
                    <form onSubmit={this.handlesubmit}>
                        <div className="form-group">
                            <label for="email">Full Name:</label>
                            <input type="text" className="form-control" name="fullname" onChange={this.handlechange} value={this.state.fullname} id="email" />
                        </div>

                        <div className="form-group">
                            <label for="pwd">Email:</label>
                            <input type="text" className="form-control" name="email" onChange={this.handlechange} value={this.state.email} id="pwd" />
                        </div>

                        <div className="form-group">
                            <label for="pwd">Mobile No:</label>
                            <input type="text" className="form-control" name="number" onChange={this.handlechange} value={this.state.number} id="pwd" />
                        </div>

                        <div className="form-group">
                            <label for="comment">Message:</label>
                            <textarea className="form-control" name="message" onChange={this.handlechange} value={this.state.message} rows="5" id="comment"></textarea>
                        </div>

                        <input type="submit" className="btn btn-primary" value="Submit" />
                    </form>
                </div>
            </div>
        )
    }
}

export default Form;



SideBar:-
#sidebar-wrapper
{
  width: 280px;
}

#sidebar-wrapper {
  min-height: 100vh;
  margin-left: -15rem;
  -webkit-transition: margin .25s ease-out;
  -moz-transition: margin .25s ease-out;
  -o-transition: margin .25s ease-out;
  transition: margin .25s ease-out;
}

#sidebar-wrapper .sidebar-heading {
  padding: 0.875rem 1.25rem;
  font-size: 1.2rem;
}

#sidebar-wrapper .list-group {
  width: 15rem;
}

#page-content-wrapper {
  min-width: 100vw;
}

#wrapper.toggled #sidebar-wrapper {
  margin-left: 0;
}

@media (min-width: 769px)
{
  #page-content-wrapper {
    min-width: 0;
}

#sidebar-wrapper {
  min-height: 100vh;
  margin-left: 0;
  transition: margin .25s ease-out;
}

#wrapper.toggled #sidebar-wrapper {
  margin-left: -17.50rem;
}
}
@media (max-width: 768px) {
  #sidebar-wrapper {
    margin-right: -17.50rem;
    order: 2;
    margin-top: 48px;
  }

  #page-content-wrapper {
    min-width: 0;
    width: 100%;
  }

  #wrapper.toggled #sidebar-wrapper {
    margin-left: 0;
  }
}

@media (max-width: 767px) {
  #sidebar-wrapper {
    margin-left: -17.50rem;
  }

  #page-content-wrapper {
    min-width: 0;
    width: 100%;
  }

  #wrapper.toggled #sidebar-wrapper {
    margin-left: 0;
  }
}
